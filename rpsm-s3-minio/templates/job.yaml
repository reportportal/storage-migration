apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "rpsm-s3-minio.fullname" . }}
  labels:
    {{- include "rpsm-s3-minio.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 86400
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rpsm-s3-minio.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MINIO_ENDPOINT
              value: "{{ .Values.storage.minio.endpoint }}"
            {{- if .Values.storage.minio.secretName }}
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.minio.secretName }}"
                  key: "{{ .Values.storage.minio.accesskeyName }}"
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.minio.secretName }}"
                  key: "{{ .Values.storage.minio.secretkeyName }}"
            {{- else }}
            - name: MINIO_ACCESS_KEY
              value: "{{ .Values.storage.minio.accesskey }}"
            - name: MINIO_SECRET_KEY
              value: "{{ .Values.storage.minio.secretkey }}"
            {{- end }}
            - name: S3_ENDPOINT
              value: "{{ .Values.storage.s3.endpoint }}"
            {{- if .Values.storage.s3.secretName }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.s3.secretName }}"
                  key: "{{ .Values.storage.s3.accesskeyName }}"
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.s3.secretName }}"
                  key: "{{ .Values.storage.s3.secretkeyName }}"
            {{- else }}
            - name: S3_ACCESS_KEY
              value: "{{ .Values.storage.s3.accesskey }}"
            - name: S3_SECRET_KEY
              value: "{{ .Values.storage.s3.secretkey }}"
            {{- end }}
            - name: MINIO_SINGLE_BUCKET
              value: "{{ .Values.storage.bucket.fromMinioBucket }}"
            - name: S3_SINGLE_BUCKET
              value: "{{ .Values.storage.bucket.toS3Bucket }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}