apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "rpsm-multi-single.fullname" . }}
  labels:
    {{- include "rpsm-multi-single.labels" . | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 86400
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rpsm-multi-single.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: RP_DB_HOST
              value: "{{ .Values.postgresql.endpoint.address }}"
            - name: RP_DB_USER
              value: "{{ .Values.postgresql.endpoint.user }}"
            - name: RP_DB_PASS
            {{ if .Values.postgresql.SecretName }}
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.postgresql.SecretName }}"
                  key: "postgresql-password"
            {{ else }}
              value: "{{ .Values.postgresql.endpoint.password }}"
              {{ end }}
            - name: RP_DB_NAME
              value: "{{ .Values.postgresql.endpoint.dbName }}"
            - name: DATASTORE_TYPE
              value: "{{ .Values.storage.type }}"
            {{- if .Values.storage.secretName }}
            - name: DATASTORE_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.secretName }}"
                  key: "{{ .Values.storage.accesskeyName }}"
            - name: DATASTORE_SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.storage.secretName }}"
                  key: "{{ .Values.storage.secretkeyName }}"
            {{- else }}
            - name: DATASTORE_ACCESSKEY
              value: "{{ .Values.storage.accesskey }}"
            - name: DATASTORE_SECRETKEY
              value: "{{ .Values.storage.secretkey }}"
            {{- end }}
            - name: DATASTORE_ENDPOINT
              value: "{{ .Values.storage.minio.endpoint }}"
            - name: DATASTORE_BUCKETPREFIX
              value: "{{ .Values.storage.bucket.bucketPrefix | default "prj-" }}"
            - name: DATASTORE_DEFAULTBUCKETNAME # плагины, по умолчнаию rp-bucket
              value: "{{ .Values.storage.bucket.bucketForPlugins }}" 
            - name: DATASTORE_SINGLEBUCKETNAME
              value: "{{ .Values.storage.bucket.bucketSingleName }}" # куда мигрирует
            - name: DATASTORE_REGION
              value: "{{ .Values.storage.s3.region }}"
            - name: DATASTORE_REMOVE_AFTER_MIGRATION
              value: "{{ .Values.storage.removeAfterMigration }}"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}